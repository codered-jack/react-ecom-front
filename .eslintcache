[{"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\index.js":"1","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reportWebVitals.js":"2","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\App.js":"3","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\auth\\Login.js":"4","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\auth\\Register.js":"5","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Home.js":"6","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\nav\\Header.js":"7","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\firebase.js":"8","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\auth\\RegisterComplete.js":"9","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\index.js":"10","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\userReducer.js":"11","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\auth\\ForgotPassword.js":"12","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\auth.js":"13","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\user\\History.js":"14","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\routes\\UserRoute.js":"15","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\routes\\LoadingToRedirect.js":"16","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\nav\\UserNav.js":"17","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\user\\Wishlist.js":"18","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\user\\Password.js":"19","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\routes\\AdminRoute.js":"20","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\AdminDashboard.js":"21","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\nav\\AdminNav.js":"22","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\category\\CategoryCreate.js":"23","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\category.js":"24","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\category\\CategoryUpdate.js":"25","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\CategoryForm.js":"26","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\LocalSearch.js":"27","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\sub\\SubCreate.js":"28","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\sub.js":"29","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\sub\\SubUpdate.js":"30","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\product\\ProductCreate.js":"31","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\product.js":"32","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\ProductCreateForm.js":"33","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\FileUpload.js":"34","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\AdminProductCard.js":"35","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\product\\AllProducts.js":"36","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\product\\ProductUpdate.js":"37","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\ProductUpdateForm.js":"38","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\ProductCard.js":"39","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\Jumbotron.js":"40","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\LoadingCard.js":"41","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\home\\NewArrivals.js":"42","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\home\\BestSellers.js":"43","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Product.js":"44","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\SingleProduct.js":"45","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\ProductListItems.js":"46","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\modal\\RatingModal.js":"47","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\rating.js":"48","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\category\\CategoryList.js":"49","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\category\\CategoryHome.js":"50","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\sub\\SubList.js":"51","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\sub\\SubHome.js":"52","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\searchReducer.js":"53","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\Search.js":"54","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Shop.js":"55","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\Star.js":"56","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\cartReducer.js":"57","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Cart.js":"58","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\ProductCardInCheckout.js":"59","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\drawerReducer.js":"60","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\drawer\\SideDrawer.js":"61","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Checkout.js":"62","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\user.js":"63","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\coupon\\CreateCouponPage.js":"64","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\coupon.js":"65","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\couponReducer.js":"66","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Payment.js":"67","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\StripeCheckout.js":"68","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\stripe.js":"69","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\ShowPaymentInfo.js":"70","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\order\\Invoice.js":"71","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\admin.js":"72","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\order\\Orders.js":"73","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\CODReducer.js":"74"},{"size":874,"mtime":1610900572534,"results":"75","hashOfConfig":"76"},{"size":362,"mtime":499162500000,"results":"77","hashOfConfig":"76"},{"size":5125,"mtime":1612956366450,"results":"78","hashOfConfig":"76"},{"size":4735,"mtime":1612780956569,"results":"79","hashOfConfig":"76"},{"size":1494,"mtime":1611120249964,"results":"80","hashOfConfig":"76"},{"size":1002,"mtime":1612069265078,"results":"81","hashOfConfig":"76"},{"size":2517,"mtime":1612676379508,"results":"82","hashOfConfig":"76"},{"size":546,"mtime":1610877436936,"results":"83","hashOfConfig":"76"},{"size":2631,"mtime":1611209112039,"results":"84","hashOfConfig":"76"},{"size":544,"mtime":1612950795933,"results":"85","hashOfConfig":"76"},{"size":274,"mtime":1610900931650,"results":"86","hashOfConfig":"76"},{"size":1721,"mtime":1611119668260,"results":"87","hashOfConfig":"76"},{"size":744,"mtime":1611208255059,"results":"88","hashOfConfig":"76"},{"size":2994,"mtime":1612955294680,"results":"89","hashOfConfig":"76"},{"size":455,"mtime":1611208958025,"results":"90","hashOfConfig":"76"},{"size":634,"mtime":1611209141133,"results":"91","hashOfConfig":"76"},{"size":689,"mtime":1611160350054,"results":"92","hashOfConfig":"76"},{"size":1489,"mtime":1612950261995,"results":"93","hashOfConfig":"76"},{"size":1586,"mtime":1611161974564,"results":"94","hashOfConfig":"76"},{"size":745,"mtime":1611209125805,"results":"95","hashOfConfig":"76"},{"size":1217,"mtime":1612944906418,"results":"96","hashOfConfig":"76"},{"size":1301,"mtime":1611220614545,"results":"97","hashOfConfig":"76"},{"size":3244,"mtime":1611246175148,"results":"98","hashOfConfig":"76"},{"size":955,"mtime":1611331573135,"results":"99","hashOfConfig":"76"},{"size":1797,"mtime":1611236185905,"results":"100","hashOfConfig":"76"},{"size":508,"mtime":1611236164780,"results":"101","hashOfConfig":"76"},{"size":487,"mtime":1611238345493,"results":"102","hashOfConfig":"76"},{"size":3992,"mtime":1611248808134,"results":"103","hashOfConfig":"76"},{"size":745,"mtime":1611248457935,"results":"104","hashOfConfig":"76"},{"size":2618,"mtime":1611249901510,"results":"105","hashOfConfig":"76"},{"size":2967,"mtime":1611504187621,"results":"106","hashOfConfig":"76"},{"size":1593,"mtime":1612372491803,"results":"107","hashOfConfig":"76"},{"size":3747,"mtime":1611336869156,"results":"108","hashOfConfig":"76"},{"size":3164,"mtime":1611590537750,"results":"109","hashOfConfig":"76"},{"size":1032,"mtime":1611551060170,"results":"110","hashOfConfig":"76"},{"size":2034,"mtime":1611512040412,"results":"111","hashOfConfig":"76"},{"size":4061,"mtime":1611592196264,"results":"112","hashOfConfig":"76"},{"size":3942,"mtime":1611589697268,"results":"113","hashOfConfig":"76"},{"size":2461,"mtime":1612932076785,"results":"114","hashOfConfig":"76"},{"size":251,"mtime":1611650722728,"results":"115","hashOfConfig":"76"},{"size":462,"mtime":1612373077339,"results":"116","hashOfConfig":"76"},{"size":1595,"mtime":1611672868952,"results":"117","hashOfConfig":"76"},{"size":1590,"mtime":1611673139997,"results":"118","hashOfConfig":"76"},{"size":2073,"mtime":1612030843636,"results":"119","hashOfConfig":"76"},{"size":3816,"mtime":1612949702832,"results":"120","hashOfConfig":"76"},{"size":2129,"mtime":1611679949182,"results":"121","hashOfConfig":"76"},{"size":1273,"mtime":1612020353535,"results":"122","hashOfConfig":"76"},{"size":778,"mtime":1612028700342,"results":"123","hashOfConfig":"76"},{"size":992,"mtime":1612063975628,"results":"124","hashOfConfig":"76"},{"size":1371,"mtime":1612068619564,"results":"125","hashOfConfig":"76"},{"size":876,"mtime":1612069168836,"results":"126","hashOfConfig":"76"},{"size":1283,"mtime":1612069378597,"results":"127","hashOfConfig":"76"},{"size":233,"mtime":1612099746455,"results":"128","hashOfConfig":"76"},{"size":992,"mtime":1612100831272,"results":"129","hashOfConfig":"76"},{"size":10178,"mtime":1612929291062,"results":"130","hashOfConfig":"76"},{"size":472,"mtime":1612442788715,"results":"131","hashOfConfig":"76"},{"size":462,"mtime":1612674682090,"results":"132","hashOfConfig":"76"},{"size":3347,"mtime":1612950867249,"results":"133","hashOfConfig":"76"},{"size":3517,"mtime":1612695022796,"results":"134","hashOfConfig":"76"},{"size":196,"mtime":1612695287830,"results":"135","hashOfConfig":"76"},{"size":1740,"mtime":1612697169864,"results":"136","hashOfConfig":"76"},{"size":5487,"mtime":1612954771209,"results":"137","hashOfConfig":"76"},{"size":2430,"mtime":1612954440311,"results":"138","hashOfConfig":"76"},{"size":4275,"mtime":1612775296595,"results":"139","hashOfConfig":"76"},{"size":523,"mtime":1612760258800,"results":"140","hashOfConfig":"76"},{"size":211,"mtime":1612796006779,"results":"141","hashOfConfig":"76"},{"size":697,"mtime":1612873455000,"results":"142","hashOfConfig":"76"},{"size":4917,"mtime":1612929173458,"results":"143","hashOfConfig":"76"},{"size":260,"mtime":1612892216839,"results":"144","hashOfConfig":"76"},{"size":1033,"mtime":1612944842708,"results":"145","hashOfConfig":"76"},{"size":2867,"mtime":1612938750719,"results":"146","hashOfConfig":"76"},{"size":461,"mtime":1612945013362,"results":"147","hashOfConfig":"76"},{"size":2611,"mtime":1612955136130,"results":"148","hashOfConfig":"76"},{"size":197,"mtime":1612950765791,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"yur2x5",{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"152"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"152"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"152"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"152"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"152"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"152"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"152"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"152"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"152"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"152"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"152"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"152"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"152"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"152"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"152"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"152"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"152"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"152"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"152"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"152"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"152"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"152"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"152"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"152"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\index.js",[],["326","327"],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reportWebVitals.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\App.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\auth\\Login.js",["328","329"],"import React, { useState, useEffect } from 'react';\r\nimport { auth, googleAuthProvider } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { Button } from 'antd';\r\nimport { GoogleOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { createOrUpdateUser } from '../../functions/auth';\r\n\r\nconst Login = ({location}) => {\r\n  const [email, setEmail] = useState('');\r\n  const [passoword, setPassoword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const history=useHistory();\r\n\r\n  useEffect(() => {\r\n    let intended = location.state;\r\n    if (intended) {\r\n      return;\r\n    } else {\r\n      if (user && user.token) history.push('/');\r\n    }\r\n  }, [user, history]);\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  const roleBasedRedirect = (res) => {\r\n    let intended = location.state;\r\n    if (intended) {\r\n      history.push(intended.from);\r\n    } else {\r\n      if (res.data.role === 'admin') {\r\n        history.push('/admin/dashboard');\r\n      } else {\r\n        history.push('/user/history');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const result = await auth.signInWithEmailAndPassword(email, passoword);\r\n\r\n      const { user } = result;\r\n      const idTokenResult = await user.getIdTokenResult();\r\n\r\n      createOrUpdateUser(idTokenResult.token)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: 'LOGGED_IN_USER',\r\n            payload: {\r\n              name: res.data.name,\r\n              email: res.data.email,\r\n              token: idTokenResult.token,\r\n              role: res.data.role,\r\n              _id: res.data._id,\r\n            },\r\n          });\r\n          roleBasedRedirect(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n\r\n      history.push('/');\r\n    } catch (error) {\r\n      setLoading(false);\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n\r\n  const googleLogin = async () => {\r\n    auth\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(async (result) => {\r\n        const { user } = result;\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        createOrUpdateUser(idTokenResult.token)\r\n          .then((res) => {\r\n            dispatch({\r\n              type: 'LOGGED_IN_USER',\r\n              payload: {\r\n                name: res.data.name,\r\n                email: res.data.email,\r\n                token: idTokenResult.token,\r\n                role: res.data.role,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n\r\n            roleBasedRedirect(res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        toast.error(err.message);\r\n      });\r\n  };\r\n  const loginForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <input\r\n          type='email'\r\n          className='form-control'\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder='Your email'\r\n          autoFocus\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <input\r\n          type='password'\r\n          className='form-control'\r\n          value={passoword}\r\n          onChange={(e) => setPassoword(e.target.value)}\r\n          placeholder='Your password'\r\n        />\r\n      </div>\r\n\r\n      <br />\r\n      <Button\r\n        onClick={handleSubmit}\r\n        type='primary'\r\n        className='mb-3'\r\n        block\r\n        shape='round'\r\n        icon={<MailOutlined />}\r\n        size='large'\r\n        disabled={!email || passoword.length < 6}\r\n      >\r\n        Login with Email/Password\r\n      </Button>\r\n    </form>\r\n  );\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>Loading...</h4>\r\n          ) : (\r\n            <h4>Login</h4>\r\n          )}\r\n          {loginForm()}\r\n          <Button\r\n            onClick={googleLogin}\r\n            type='danger'\r\n            className='mb-3'\r\n            block\r\n            shape='round'\r\n            icon={<GoogleOutlined />}\r\n            size='large'\r\n          >\r\n            Login with Google\r\n          </Button>\r\n          <Link to='/forgot/password' className='float-right text-danger'>\r\n            Forgot Password\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\auth\\Register.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Home.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\nav\\Header.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\firebase.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\auth\\RegisterComplete.js",["330"],"import React, { useState, useEffect } from 'react';\r\nimport { auth } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {createOrUpdateUser} from \"../../functions/auth\"\r\n\r\nconst RegisterComplete = ({ history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  let dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem('emailForRegistration'));\r\n  }, [history]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!email || !password) {\r\n      toast.error('Email and password is required');\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      toast.error('Password must be at least 6 characters long');\r\n      return;\r\n    }\r\n    try {\r\n      const result = await auth.signInWithEmailLink(\r\n        email,\r\n        window.location.href\r\n      );\r\n\r\n      if (result.user.emailVerified) {\r\n        window.localStorage.removeItem('emailForRegistration');\r\n\r\n        let user = auth.currentUser;\r\n\r\n        await user.updatePassword(password);\r\n        const idTokenResult = await user.getIdTokenResult();\r\n\r\n        createOrUpdateUser(idTokenResult.token)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: 'LOGGED_IN_USER',\r\n            payload: {\r\n              name: res.data.name,\r\n              email:res.data.email,\r\n              token: idTokenResult.token,\r\n              role:res.data.role,\r\n              _id:res.data._id,\r\n            },\r\n          });\r\n        })\r\n        .catch(err=>{\r\n          console.log(err);\r\n        });\r\n\r\n        history.push('/');\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n  const completeRegistrationForm = () => (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='email' className='form-control' value={email} disabled />\r\n      <input\r\n        type='password'\r\n        className='form-control'\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder='Password'\r\n        autoFocus\r\n      />\r\n      <br />\r\n      <button type='submit' className='btn btn-raised'>\r\n        Complete Register\r\n      </button>\r\n    </form>\r\n  );\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='row'>\r\n        <div className='col-md-6 offset-md-3'>\r\n          <h4>Register Complete</h4>\r\n          {completeRegistrationForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterComplete;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\index.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\userReducer.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\auth\\ForgotPassword.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\auth.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\user\\History.js",["331","332","333"],"import React, { useState, useEffect } from 'react';\r\nimport UserNav from '../../components/nav/UserNav';\r\nimport { getUserOrders } from '../../functions/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { toast } from 'react-toastify';\r\nimport ShowPaymentInfo from '../../components/cards/ShowPaymentInfo';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport Invoice from '../../components/order/Invoice';\r\nconst History = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadUserOrders();\r\n  }, []);\r\n\r\n  const loadUserOrders = () =>\r\n    getUserOrders(user.token).then((res) => {\r\n      setOrders(res.data);\r\n    });\r\n\r\n  const showOrderInTable = (order) => {\r\n    return (\r\n      <table className='table table-bordered'>\r\n        <thead className='thead-light'>\r\n          <tr>\r\n            <th scope='col'>Title</th>\r\n            <th scope='col'>Price</th>\r\n            <th scope='col'>Brand</th>\r\n            <th scope='col'>Color</th>\r\n            <th scope='col'>Count</th>\r\n            <th scope='col'>Shipping</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {order.products.map((p, i) => (\r\n            <tr key={i}>\r\n              <td>\r\n                <b>{p.product.title}</b>\r\n              </td>\r\n              <td>{p.product.price}</td>\r\n              <td>{p.product.brand}</td>\r\n              <td>{p.color}</td>\r\n              <td>{p.count}</td>\r\n              <td>\r\n                {p.product.shipping === 'Yes' ? (\r\n                  <CheckCircleOutlined style={{ color: 'green' }} />\r\n                ) : (\r\n                  <CloseCircleOutlined style={{ color: 'red' }} />\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  const showDownloadLink = (order) => (\r\n    <PDFDownloadLink\r\n      document={<Invoice order={order} />}\r\n      fileName='invoice.pdf'\r\n      className='btn btn-sm btn-block btn-outline-primary'\r\n    >\r\n      Download PDF\r\n    </PDFDownloadLink>\r\n  );\r\n\r\n  const showEachOrders = () =>\r\n    orders.reverse().map((order, i) => {\r\n      return (\r\n        <div className='m-5 p-3 card' key={i}>\r\n          <ShowPaymentInfo order={order} />\r\n          {showOrderInTable(order)}\r\n          <div className='row'>\r\n            <div className='col'>{showDownloadLink(order)}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <UserNav />\r\n        </div>\r\n        <div className='col text-center'>\r\n          <h4>\r\n            {orders.length > 0 ? 'User purchase orders' : 'No purchase orders'}\r\n          </h4>\r\n          {showEachOrders()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\routes\\UserRoute.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\routes\\LoadingToRedirect.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\nav\\UserNav.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\user\\Wishlist.js",["334","335"],"import React, { useState, useEffect } from 'react';\r\nimport UserNav from '../../components/nav/UserNav';\r\nimport { getWishlist, removeWishlist } from '../../functions/user';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nconst Wishlist = () => {\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadWishlist();\r\n  }, []);\r\n\r\n  const loadWishlist = () => {\r\n    getWishlist(user.token).then((res) => setWishlist(res.data.wishlist));\r\n  };\r\n\r\n  const handleRemove = (productId) =>\r\n    removeWishlist(productId, user.token).then((res) => {\r\n      loadWishlist();\r\n    });\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <UserNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          <h4>Wishlist</h4>\r\n          {wishlist.map((p) => (\r\n            <div className='alert alert-secondary' key={p._id}>\r\n              <Link to={`/product/${p.slug}`}>{p.title}</Link>\r\n              <span\r\n                className='btn btn-sm float-right'\r\n                onClick={() => handleRemove(p._id)}\r\n              >\r\n                <DeleteOutlined className=\"text-danger\"/>\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wishlist;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\user\\Password.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\routes\\AdminRoute.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\AdminDashboard.js",["336","337"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../components/nav/AdminNav';\r\nimport { getOrders, changeStatus } from '../../functions/admin';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport Orders from '../../components/order/Orders'\r\nconst AdminDashboard = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n  }, []);\r\n\r\n  const loadOrders = () => {\r\n    getOrders(user.token).then((res) => setOrders(res.data));\r\n  };\r\n\r\n  const handleStatusChange = (orderId,orderStatus)=>{\r\n      changeStatus(orderId,orderStatus,user.token).then(res=>{\r\n          toast.success('Status Updated')\r\n          loadOrders();\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n            <h4>Admin Dashboard</h4>\r\n            <Orders orders={orders} handleStatusChange={handleStatusChange}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\nav\\AdminNav.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\category\\CategoryCreate.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\category.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\category\\CategoryUpdate.js",["338"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\n// import { useParams } from 'react-router-dom';\r\n\r\nimport { updateCategory, getCategory } from '../../../functions/category';\r\nimport CategoryForm from '../../../components/forms/CategoryForm';\r\n\r\nconst CategoryUpdate = ({ history,match }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [name, setName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n//   let { slug } = useParams();\r\n\r\n  useEffect(() => {\r\n    loadCategory();\r\n  }, []);\r\n\r\n  const loadCategory = () =>\r\n    getCategory(match.params.slug).then((c) => setName(c.data?.name));\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      updateCategory(match.params.slug,{ name }, user.token)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          setName('');\r\n          toast.success(`\"${res.data.name}\" is updated`);\r\n          history.push(\"/admin/category\")\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          if (err.response.status === 400) toast.error(err.response.data);\r\n        });\r\n    };\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>Loading...</h4>\r\n          ) : (\r\n            <h4>Update Category</h4>\r\n          )}\r\n          <CategoryForm handleSubmit={handleSubmit}  name={name} setName={setName}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryUpdate;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\CategoryForm.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\LocalSearch.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\sub\\SubCreate.js",["339"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { createSub, getSub, removeSub,getSubs } from '../../../functions/sub';\r\nimport { getCategories } from '../../../functions/category';\r\nimport CategoryForm from '../../../components/forms/CategoryForm';\r\nimport LocalSearch from '../../../components/forms/LocalSearch';\r\n\r\nconst SubCreate = () => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [name, setName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [subs, setSubs] = useState([]);\r\n  const [category, setCategory] = useState('');\r\n\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n    loadSubs();\r\n  }, []);\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setCategories(c.data));\r\n\r\n    const loadSubs = () =>\r\n    getSubs().then((s) => setSubs(s.data));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    createSub({ name,parent:category }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName('');\r\n        toast.success(`\"${res.data.name}\" is created`);\r\n        loadSubs();\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n\r\n  const handleRemove = async (slug) => {\r\n    if (window.confirm('Delete?')) {\r\n      setLoading(true);\r\n      removeSub(slug, user.token)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          toast.error(`${res.data.name} deleted`);\r\n          loadSubs();\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          if (err.response.status === 400) toast.error(err.response.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword);\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>Loading...</h4>\r\n          ) : (\r\n            <h4>Create Sub Category</h4>\r\n          )}\r\n\r\n          <div className='form-group'>\r\n            <label>Category</label>\r\n            <select\r\n              name='category'\r\n              className='form-control'\r\n              onChange={(e) => setCategory(e.target.value)}\r\n            >\r\n              <option>Please Select</option>\r\n              {categories.length > 0 &&\r\n                categories.map((c) => (\r\n                  <option key={c._id} value={c._id}>\r\n                    {c.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <CategoryForm\r\n            handleSubmit={handleSubmit}\r\n            name={name}\r\n            setName={setName}\r\n          />\r\n\r\n          <LocalSearch keyword={keyword} setKeyword={setKeyword} />\r\n          <hr />\r\n          {subs.filter(searched(keyword)).map((s) => (\r\n            <div className='alert alert-secondary' key={s._id}>\r\n              {s.name}{' '}\r\n              <span\r\n                className='btn btn-sm float-right'\r\n                onClick={() => handleRemove(s.slug)}\r\n              >\r\n                <DeleteOutlined className='text-danger' />\r\n              </span>\r\n              <Link to={`/admin/sub/${s.slug}`}>\r\n                <span className='btn btn-sm float-right'>\r\n                  <EditOutlined className='text-warning' />\r\n                </span>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubCreate;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\sub.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\sub\\SubUpdate.js",["340","341","342"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { createSub, getSub, removeSub, updateSub } from '../../../functions/sub';\r\nimport { getCategories } from '../../../functions/category';\r\nimport CategoryForm from '../../../components/forms/CategoryForm';\r\n\r\nconst SubUpdate = ({history,match}) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [name, setName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [parent, setParent] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n    loadSub();\r\n  }, []);\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setCategories(c.data));\r\n\r\n  const loadSub = () =>\r\n    getSub(match.params.slug).then((s) => {\r\n      setName(s.data.name);\r\n      setParent(s.data.parent)\r\n    });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    updateSub(match.params.slug,{ name, parent }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName('');\r\n        toast.success(`\"${res.data.name}\" is updated`);\r\n        history.push('/admin/sub')\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response.status === 400) toast.error(err.response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>Loading...</h4>\r\n          ) : (\r\n            <h4>Update Sub Category</h4>\r\n          )}\r\n\r\n          <div className='form-group'>\r\n            <label>Parent Category</label>\r\n            <select\r\n              name='category'\r\n              className='form-control'\r\n              onChange={(e) => setParent(e.target.value)}\r\n            >\r\n              <option>Please Select</option>\r\n              {categories.length > 0 &&\r\n                categories.map((c) => (\r\n                  <option key={c._id} value={c._id} selected={c._id===parent}>\r\n                    {c.name}\r\n                  </option>\r\n                ))}\r\n            </select>\r\n          </div>\r\n\r\n          <CategoryForm\r\n            handleSubmit={handleSubmit}\r\n            name={name}\r\n            setName={setName}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubUpdate;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\product\\ProductCreate.js",["343"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { createProduct } from '../../../functions/product';\r\nimport { getCategories, getCategorySubs } from '../../../functions/category';\r\nimport ProductCreateForm from '../../../components/forms/ProductCreateForm';\r\nimport FileUpload from '../../../components/forms/FileUpload';\r\nimport {LoadingOutlined} from '@ant-design/icons'\r\n\r\nconst ProductCreate = () => {\r\n  const initialState = {\r\n    title: 'Macbook',\r\n    description: 'macbook from apple',\r\n    price: '2000',\r\n    categories: [],\r\n    category: '',\r\n    subs: [],\r\n    shipping: '',\r\n    quantity: '100',\r\n    images: [],\r\n    colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n    brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n    color: 'Silver',\r\n    brand: 'Apple',\r\n  };\r\n\r\n  const [values, setValues] = useState(initialState);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [showSub, setShowSub] = useState(false);\r\n  const [loading,setLoading]=useState(false);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProduct(values, user.token)\r\n      .then((res) => {\r\n        window.alert(`${res.data.title} is created`);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        //if (err.response.status === 400) toast.error(err.response.data);\r\n        toast.error(err.response.data.err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setValues({ ...values, subs: [], category: e.target.value });\r\n    getCategorySubs(e.target.value).then((res) => {\r\n      setSubOptions(res.data);\r\n    });\r\n    setShowSub(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setValues({ ...values, categories: c.data }));\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          {loading?<LoadingOutlined className=\"text-danger h1\"/>:<h4>Product create</h4>}\r\n          <hr />\r\n          <div className='p-3'>\r\n            <FileUpload setValues={setValues} values={values} setLoading={setLoading}/>\r\n          </div>\r\n          <ProductCreateForm\r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n            setValues={setValues}\r\n            values={values}\r\n            handleCategoryChange={handleCategoryChange}\r\n            subOptions={subOptions}\r\n            showSub={showSub}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCreate;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\product.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\ProductCreateForm.js",["344","345","346","347","348"],"import React from 'react';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductCreateForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  setValues,\r\n  values, //values: { title, description, price, quantity, colors, brands }\r\n  handleCategoryChange,\r\n  subOptions,\r\n  showSub,\r\n}) => {\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    categories,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Title</label>\r\n        <input\r\n          type='text'\r\n          name='title'\r\n          className='form-control'\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Description</label>\r\n        <input\r\n          type='text'\r\n          name='description'\r\n          className='form-control'\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Price</label>\r\n        <input\r\n          type='number'\r\n          name='price'\r\n          className='form-control'\r\n          value={price}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Shipping</label>\r\n        <select\r\n          name='shipping'\r\n          className='form-control'\r\n          onChange={handleChange}\r\n        >\r\n          <option>Please Select</option>\r\n          <option value='No'>No</option>\r\n          <option value='Yes'>Yes</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Quantity</label>\r\n        <input\r\n          type='number'\r\n          name='quantity'\r\n          className='form-control'\r\n          value={quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Color</label>\r\n        <select name='color' className='form-control' onChange={handleChange}>\r\n          <option>Please Select</option>\r\n          {colors.map((c) => (\r\n            <option key={c} value={c}>\r\n              {c}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Brand</label>\r\n        <select name='brand' className='form-control' onChange={handleChange}>\r\n          <option>Please Select</option>\r\n          {brands.map((b) => (\r\n            <option key={b} value={b}>\r\n              {b}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Category</label>\r\n        <select\r\n          name='category'\r\n          className='form-control'\r\n          onChange={handleCategoryChange}\r\n        >\r\n          <option>Please Select</option>\r\n          {categories.length > 0 &&\r\n            categories.map((c) => (\r\n              <option key={c._id} value={c._id}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n    {showSub && <div>\r\n      <label>Sub Categories</label>\r\n      <Select\r\n        mode='multiple'\r\n        style={{ width: '100%' }}\r\n        placeholder='Please Select'\r\n        values={subs}\r\n        onChange={(value) => setValues({ ...values, subs: value })}\r\n      >\r\n        {subOptions.length &&\r\n          subOptions.map((s) => (\r\n            <Option  key={s._id} value={s._id} >\r\n              {s.name}\r\n            </Option>\r\n          ))}\r\n      </Select>\r\n    </div>}\r\n      <br/>\r\n      <button className='btn btn-outline-info'>Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductCreateForm;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\FileUpload.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\AdminProductCard.js",["349"],"import React from 'react';\r\nimport { Card } from 'antd';\r\nimport laptop from '../../images/laptop.jpg';\r\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nconst { Meta } = Card;\r\n\r\nconst AdminProductCard = ({ product, handleRemove }) => {\r\n  const { title, description, images, slug } = product;\r\n  return (\r\n    <Card\r\n      cover={\r\n        <img\r\n          src={images && images.length ? images[0].url : laptop}\r\n          style={{ height: '150px', objectFit: 'cover' }}\r\n          className='p-1'\r\n        />\r\n      }\r\n      actions={[\r\n        <Link to={`/admin/product/${slug}`}>\r\n          <EditOutlined className='text-warning' />\r\n        </Link>,\r\n        <DeleteOutlined\r\n          onClick={() => handleRemove(slug)}\r\n          className='text-danger'\r\n        />,\r\n      ]}\r\n    >\r\n      <Meta\r\n        title={title}\r\n        description={`${description && description.substring(0, 40)}...`}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AdminProductCard;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\product\\AllProducts.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\admin\\product\\ProductUpdate.js",["350","351"],"import React, { useState, useEffect } from 'react';\r\nimport AdminNav from '../../../components/nav/AdminNav';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { getProduct, updateProduct } from '../../../functions/product';\r\nimport { getCategories, getCategorySubs } from '../../../functions/category';\r\nimport FileUpload from '../../../components/forms/FileUpload';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { useParams } from 'react-router-dom';\r\nimport ProductUpdateForm from '../../../components/forms/ProductUpdateForm';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n  category: '',\r\n  subs: [],\r\n  shipping: '',\r\n  quantity: '',\r\n  images: [],\r\n  colors: ['Black', 'Brown', 'Silver', 'White', 'Blue'],\r\n  brands: ['Apple', 'Samsung', 'Microsoft', 'Lenovo', 'ASUS'],\r\n  color: '',\r\n  brand: '',\r\n};\r\n\r\nconst ProductUpdate = ({ match, history }) => {\r\n  const [values, setValues] = useState(initialState);\r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [arrayOfSubs, setArrayOfSubs] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  //router\r\n  let { slug } = useParams();\r\n\r\n  useEffect(() => {\r\n    loadProduct();\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadProduct = () => {\r\n    getProduct(slug).then((p) => {\r\n      setValues({ ...values, ...p.data });\r\n      getCategorySubs(p.data.category._id).then((res) => {\r\n        setSubOptions(res.data);\r\n      });\r\n      //prepare array of sub id to show as default sub values\r\n      let arr = [];\r\n      p.data.subs.map((s) => {\r\n        arr.push(s._id);\r\n      });\r\n      setArrayOfSubs((prev) => arr); //prev values is updated with new value\r\n    });\r\n  };\r\n\r\n  const loadCategories = () =>\r\n    getCategories().then((c) => setCategories(c.data));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    values.subs = arrayOfSubs;\r\n    values.category = selectedCategory ? selectedCategory : values.category;\r\n\r\n    updateProduct(slug, values, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        toast.success(`\"${res.data.title}\" is updated`);\r\n        history.push('/admin/products');\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(err.response.data.err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    setValues({ ...values, subs: [] });\r\n\r\n    setSelectedCategory(e.target.value);\r\n\r\n    getCategorySubs(e.target.value).then((res) => {\r\n      setSubOptions(res.data);\r\n    });\r\n    if (values.category._id === e.target.value) {\r\n      loadProduct();\r\n    }\r\n    setArrayOfSubs([]);\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          {loading ? (\r\n            <LoadingOutlined className='text-danger h1' />\r\n          ) : (\r\n            <h4>Product update</h4>\r\n          )}\r\n          <div className='p-3'>\r\n            <FileUpload\r\n              setValues={setValues}\r\n              values={values}\r\n              setLoading={setLoading}\r\n            />\r\n          </div>\r\n          <ProductUpdateForm\r\n            handleSubmit={handleSubmit}\r\n            handleChange={handleChange}\r\n            setValues={setValues}\r\n            values={values}\r\n            handleCategoryChange={handleCategoryChange}\r\n            subOptions={subOptions}\r\n            categories={categories}\r\n            arrayOfSubs={arrayOfSubs}\r\n            setArrayOfSubs={setArrayOfSubs}\r\n            selectedCategory={selectedCategory}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductUpdate;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\ProductUpdateForm.js",["352","353"],"import React from 'react';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst ProductUpdateForm = ({\r\n  handleSubmit,\r\n  handleChange,\r\n  setValues,\r\n  values, //values: { title, description, price, quantity, colors, brands }\r\n  handleCategoryChange,\r\n  subOptions,\r\n  categories,\r\n  arrayOfSubs,\r\n  setArrayOfSubs,\r\n  selectedCategory,\r\n}) => {\r\n  const {\r\n    title,\r\n    description,\r\n    price,\r\n    category,\r\n    subs,\r\n    shipping,\r\n    quantity,\r\n    images,\r\n    colors,\r\n    brands,\r\n    color,\r\n    brand,\r\n  } = values;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label>Title</label>\r\n        <input\r\n          type='text'\r\n          name='title'\r\n          className='form-control'\r\n          value={title}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Description</label>\r\n        <input\r\n          type='text'\r\n          name='description'\r\n          className='form-control'\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Price</label>\r\n        <input\r\n          type='number'\r\n          name='price'\r\n          className='form-control'\r\n          value={price}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='form-group'>\r\n        <label>Shipping</label>\r\n        <select\r\n          value={shipping === 'Yes' ? 'Yes' : 'No'}\r\n          name='shipping'\r\n          className='form-control'\r\n          onChange={handleChange}\r\n        >\r\n          <option value='No'>No</option>\r\n          <option value='Yes'>Yes</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Quantity</label>\r\n        <input\r\n          type='number'\r\n          name='quantity'\r\n          className='form-control'\r\n          value={quantity}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Color</label>\r\n        <select\r\n          value={color}\r\n          name='color'\r\n          className='form-control'\r\n          onChange={handleChange}\r\n        >\r\n          {colors.map((c) => (\r\n            <option key={c} value={c}>\r\n              {c}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Brand</label>\r\n        <select\r\n          value={brand}\r\n          name='brand'\r\n          className='form-control'\r\n          onChange={handleChange}\r\n        >\r\n          {brands.map((b) => (\r\n            <option key={b} value={b}>\r\n              {b}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className='form-group'>\r\n        <label>Category</label>\r\n        <select\r\n          value={selectedCategory ? selectedCategory : category._id}\r\n          name='category'\r\n          className='form-control'\r\n          onChange={handleCategoryChange}\r\n        >\r\n          {categories.length > 0 &&\r\n            categories.map((c) => (\r\n              <option key={c._id} value={c._id}>\r\n                {c.name}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n\r\n      {\r\n        <div>\r\n          <label>Sub Categories</label>\r\n          <Select\r\n            mode='multiple'\r\n            style={{ width: '100%' }}\r\n            placeholder='Please Select'\r\n            value={arrayOfSubs}\r\n            onChange={(value) => setArrayOfSubs(value)}\r\n          >\r\n            {subOptions.length &&\r\n              subOptions.map((s) => (\r\n                <Option key={s._id} value={s._id}>\r\n                  {s.name}\r\n                </Option>\r\n              ))}\r\n          </Select>\r\n        </div>\r\n      }\r\n      <br />\r\n      <button className='btn btn-outline-info'>Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductUpdateForm;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\ProductCard.js",["354","355","356","357"],"import React, { useState } from 'react';\r\nimport { Card, Tooltip } from 'antd';\r\nimport laptop from '../../images/laptop.jpg';\r\nimport { EyeOutlined, ShoppingCartOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { showAverage } from '../../functions/rating';\r\nimport _ from 'lodash';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nconst { Meta } = Card;\r\nconst ProductCard = ({ product }) => {\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n  const [tooltip, setTooltip] = useState('Click to Add');\r\n  const dispatch = useDispatch();\r\n  const handleAddToCart = () => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'));\r\n      }\r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      });\r\n      //remove dublicate\r\n      let unique = _.unionWith(cart, _.isEqual);\r\n      localStorage.setItem('cart', JSON.stringify(unique));\r\n      setTooltip('Added');\r\n\r\n      dispatch({\r\n        type: 'ADD_TO_CART',\r\n        payload: unique,\r\n      });\r\n\r\n      dispatch({\r\n        type: 'SET_VISIBLE',\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const { images, title, description, slug, price } = product;\r\n  return (\r\n    <>\r\n      {product && product.ratings && product.ratings.length > 0 ? (\r\n        showAverage(product)\r\n      ) : (\r\n        <div className='text-center pt-1 pb-3'>No rating yet</div>\r\n      )}\r\n\r\n      <Card\r\n        cover={\r\n          <img\r\n            src={images && images.length ? images[0].url : laptop}\r\n            style={{ height: '150px', objectFit: 'cover' }}\r\n            className='p-1'\r\n          />\r\n        }\r\n        actions={[\r\n          <Link to={`/product/${slug}`}>\r\n            <EyeOutlined className='text-primary' />\r\n            <br />\r\n            View Product\r\n          </Link>,\r\n          <Tooltip title={tooltip}>\r\n            <a onClick={handleAddToCart} disabled={product.quantity < 1}>\r\n              <ShoppingCartOutlined className='text-danger' />\r\n              <br />\r\n              {product.quantity < 1 ? 'Out of Stock' : 'Add to Cart'}\r\n            </a>\r\n          </Tooltip>,\r\n        ]}\r\n      >\r\n        <Meta\r\n          title={`${title} - $${price}`}\r\n          description={`${description && description.substring(0, 40)}...`}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\Jumbotron.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\LoadingCard.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\home\\NewArrivals.js",["358"],"import React, { useState, useEffect } from 'react';\r\nimport { getProducts, getProductsCount } from '../../functions/product';\r\nimport LoadingCard from '../cards/LoadingCard';\r\nimport ProductCard from '../cards/ProductCard';\r\nimport { Pagination } from 'antd';\r\nconst NewArrivals = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [productsCount, setProductsCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    loadAllProducts();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => setProductsCount(res.data));\r\n  }, []);\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true);\r\n    getProducts('createdAt', 'desc', page).then((res) => {\r\n      setProducts(res.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        {loading ? (\r\n          <LoadingCard count={3} />\r\n        ) : (\r\n          <div className='row'>\r\n            {products.map((product) => (\r\n              <div key={product._id} className='col-md-4'>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className='row'>\r\n        <nav className='col-md-4 offset-md-4 text-center pt-5 p-3'>\r\n          <Pagination\r\n            current={page}\r\n            total={productsCount}\r\n            pageSize={3}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewArrivals;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\home\\BestSellers.js",["359"],"import React, { useState, useEffect } from 'react';\r\nimport { getProducts, getProductsCount } from '../../functions/product';\r\nimport LoadingCard from '../cards/LoadingCard';\r\nimport ProductCard from '../cards/ProductCard';\r\nimport { Pagination } from 'antd';\r\nconst BestSellers = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [productsCount, setProductsCount] = useState(0);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    loadAllProducts();\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    getProductsCount().then((res) => setProductsCount(res.data));\r\n  }, []);\r\n\r\n  const loadAllProducts = () => {\r\n    setLoading(true);\r\n    getProducts('sold', 'desc', page).then((res) => {\r\n      setProducts(res.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div className='container'>\r\n        {loading ? (\r\n          <LoadingCard count={3} />\r\n        ) : (\r\n          <div className='row'>\r\n            {products.map((product) => (\r\n              <div key={product._id} className='col-md-4'>\r\n                <ProductCard product={product} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className='row'>\r\n        <nav className='col-md-4 offset-md-4 text-center pt-5 p-3'>\r\n          <Pagination\r\n            current={page}\r\n            total={productsCount}\r\n            pageSize={3}\r\n            onChange={(value) => setPage(value)}\r\n          />\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BestSellers;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Product.js",["360","361"],"import React, { useState, useEffect } from 'react';\r\nimport { getProduct, getRelated, productStar } from '../functions/product';\r\nimport SingleProduct from '../components/cards/SingleProduct';\r\nimport { useSelector } from 'react-redux';\r\nimport ProductCard from '../components/cards/ProductCard';\r\nconst Product = ({ match }) => {\r\n  const [product, setProduct] = useState({});\r\n  const [star, setStar] = useState(0);\r\n  const [related, setRelated] = useState([]);\r\n  const { slug } = match.params;\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadSingleProduct();\r\n  }, [slug]);\r\n\r\n  useEffect(() => {\r\n    if (product.ratings && user) {\r\n      let existingRatingObject = product.ratings.find(\r\n        (ele) => ele.postedBy.toString() === user._id.toString()\r\n      );\r\n\r\n      existingRatingObject && setStar(existingRatingObject.star);\r\n    }\r\n  });\r\n\r\n  const loadSingleProduct = () => {\r\n    getProduct(slug).then((res) => {\r\n      setProduct(res.data);\r\n      getRelated(res.data._id).then((res) => setRelated(res.data));\r\n    });\r\n  };\r\n\r\n  const onStarClick = (newRating, name) => {\r\n    setStar(newRating);\r\n\r\n    productStar(name, newRating, user.token).then((res) => {\r\n      loadSingleProduct();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row pt-4'>\r\n        <SingleProduct\r\n          product={product}\r\n          onStarClick={onStarClick}\r\n          star={star}\r\n        />\r\n      </div>\r\n\r\n      <div className='row'>\r\n        <div className='col text-center pt-5 pb-5'>\r\n          <hr />\r\n          <h4>Related Products</h4>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='row pb-5'>\r\n        {related.length ? (\r\n          related.map((r) => (\r\n            <div key={related._id} className=\"col-md-4\">\r\n              <ProductCard product={r} />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className='text-center col'>No Products Found</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\SingleProduct.js",["362","363","364","365","366"],"import React,{useState} from 'react';\r\nimport { Card, Tabs,Tooltip } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { HeartOutlined, ShoppingCartOutlined } from '@ant-design/icons';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\nimport Laptop from '../../images/laptop.jpg';\r\nimport ProductListItems from './ProductListItems';\r\nimport StarRating from 'react-star-ratings';\r\nimport RatingModal from '../../components/modal/RatingModal';\r\nimport { showAverage } from '../../functions/rating';\r\nimport _ from 'lodash';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {addToWishlist} from '../../functions/user';\r\nimport { toast } from 'react-toastify';\r\nconst { TabPane } = Tabs;\r\nconst SingleProduct = ({ product, onStarClick, star }) => {\r\n  const { title, images, description, _id } = product;\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n  const [tooltip, setTooltip] = useState('Click to Add');\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const handleAddToCart = () => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'));\r\n      }\r\n      cart.push({\r\n        ...product,\r\n        count: 1,\r\n      });\r\n      //remove dublicate\r\n      let unique = _.unionWith(cart, _.isEqual);\r\n      localStorage.setItem('cart', JSON.stringify(unique));\r\n      setTooltip('Added');\r\n\r\n      dispatch({\r\n        type: 'ADD_TO_CART',\r\n        payload: unique,\r\n      });\r\n\r\n      dispatch({\r\n        type: 'SET_VISIBLE',\r\n        payload: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist =(e) =>{\r\n    e.preventDefault();\r\n    addToWishlist(product._id,user.token).then(res=>{\r\n      toast.success('Added to wishlist');\r\n      history.push('/user/wishlist');\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <div className='col-md-7'>\r\n        {images && images.length ? (\r\n          <Carousel showArrows={true} autoPlay infiniteLoop>\r\n            {images && images.map((i) => <img src={i.url} key={i.public_id} />)}\r\n          </Carousel>\r\n        ) : (\r\n          <Card cover={<img src={Laptop} className='mb-3 card-image' />}></Card>\r\n        )}\r\n        <Tabs type='card'>\r\n          <TabPane tab='Description' key='1'>\r\n            {description && description}\r\n          </TabPane>\r\n          <TabPane tab='More' key='2'>\r\n            Call us on xxxxx xxx xxx to learn more about this product.\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n      <div className='col-md-5'>\r\n        <h1 className='bg-info p-3'>{title}</h1>\r\n        {product && product.ratings && product.ratings.length > 0 ? (\r\n          showAverage(product)\r\n        ) : (\r\n          <div className='text-center pt-1 pb-3'>No rating yet</div>\r\n        )}\r\n        <Card\r\n          actions={[\r\n            <Tooltip title={tooltip}>\r\n            <a onClick={handleAddToCart}>\r\n              <ShoppingCartOutlined className='text-danger' />\r\n              <br />\r\n              Add to Cart\r\n            </a>\r\n          </Tooltip>,\r\n            <a onClick={handleAddToWishlist}>\r\n              <HeartOutlined className='text-info' />\r\n              <br />\r\n              Add to Wishlist\r\n            </a>,\r\n            <RatingModal>\r\n              <StarRating\r\n                name={_id}\r\n                numberOfStars={5}\r\n                rating={star}\r\n                changeRating={onStarClick}\r\n                isSelectable={true}\r\n                starRatedColor='red'\r\n              />\r\n            </RatingModal>,\r\n          ]}\r\n        >\r\n          <ProductListItems product={product} />\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default SingleProduct;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\ProductListItems.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\modal\\RatingModal.js",["367"],"import React, { useState } from 'react';\r\nimport { Modal, Button } from 'antd';\r\nimport { toast } from 'react-toastify';\r\nimport { useSelector } from 'react-redux';\r\nimport { StarOutlined } from '@ant-design/icons';\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nconst RatingModal = ({ children }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  let history = useHistory();\r\n  let {slug} = useParams();\r\n  const handleModal = () => {\r\n    if (user && user.token) {\r\n      setModalVisible(true);\r\n    } else {\r\n      history.push({\r\n          pathname:'/login',\r\n          state: {from:`/product/${slug}`}\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div onClick={handleModal}>\r\n        <StarOutlined className='text-danger' />\r\n        <br /> {user ? 'Leave rating' : 'Login to leave rating'}\r\n      </div>\r\n      <Modal\r\n        title='Leave your rating'\r\n        centered\r\n        onOk={() => {\r\n          setModalVisible(false);\r\n          toast.success('Thanks for your review.');\r\n        }}\r\n        visible={modalVisible}\r\n        onCancel={() => setModalVisible(false)}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RatingModal;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\rating.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\category\\CategoryList.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\category\\CategoryHome.js",["368","369"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCategory } from '../../functions/category';\r\nimport ProductCard from '../../components/cards/ProductCard';\r\nconst CategoryHome = ({ match }) => {\r\n  const [category, setCategory] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCategory(slug).then((res) => {\r\n      setCategory(res.data.category);\r\n      setProducts(res.data.products);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-center p-3 mt-5 mb-5 display-4 jumbotron'>\r\n              Loading...\r\n            </h4>\r\n          ) : (\r\n            <h4 className='text-center p-3 mt-5 mb-5 display-4 jumbotron'>\r\n              {products.length} Products in {category.name} category\r\n            </h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        {products.map((p) => (\r\n          <div className='col' key={p._id}>\r\n            <ProductCard product={p} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryHome;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\sub\\SubList.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\sub\\SubHome.js",["370"],"import React, { useState, useEffect } from 'react';\r\nimport { getSub } from '../../functions/sub';\r\nimport ProductCard from '../../components/cards/ProductCard';\r\nconst SubHome = ({ match }) => {\r\n  const [sub, setSub] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { slug } = match.params;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getSub(slug).then((res) => {\r\n      setSub(res.data.sub);\r\n      setProducts(res.data.products);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col'>\r\n          {loading ? (\r\n            <h4 className='text-center p-3 mt-5 mb-5 display-4 jumbotron'>\r\n              Loading...\r\n            </h4>\r\n          ) : (\r\n            <h4 className='text-center p-3 mt-5 mb-5 display-4 jumbotron'>\r\n              {products.length} Products in {sub.name} sub category\r\n            </h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        {products.map((p) => (\r\n          <div className='col' key={p._id}>\r\n            <ProductCard product={p} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubHome;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\searchReducer.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\Search.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Shop.js",["371","372","373","374","375","376"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  getProductsByCount,\r\n  fetchProductsByFilter,\r\n} from '../functions/product';\r\nimport { getCategories } from '../functions/category';\r\nimport { getSubs } from '../functions/sub';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ProductCard from '../components/cards/ProductCard';\r\nimport { Menu, Slider, Checkbox, Radio } from 'antd';\r\nimport {\r\n  DollarOutlined,\r\n  DownSquareOutlined,\r\n  StarOutlined,\r\n} from '@ant-design/icons';\r\nimport Star from '../components/forms/Star';\r\n\r\nconst { SubMenu, ItemGroup } = Menu;\r\nconst Shop = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [price, setPrice] = useState();\r\n  const [ok, setOk] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryIds, setCategoryIds] = useState([]);\r\n  const [star, setStar] = useState('');\r\n  const [subs, setSubs] = useState([]);\r\n  const [sub, setSub] = useState('');\r\n  const [brands, setBrands] = useState([\r\n    'Apple',\r\n    'Samsung',\r\n    'Microsoft',\r\n    'Lenovo',\r\n    'ASUS',\r\n  ]);\r\n  const [brand, setBrand] = useState('');\r\n  const [colors, setColors] = useState([\r\n    'Black',\r\n    'Brown',\r\n    'Silver',\r\n    'White',\r\n    'Blue',\r\n  ]);\r\n  const [color, setColor] = useState('');\r\n  const [shipping, setShipping] = useState('');\r\n  let dispatch = useDispatch();\r\n  let { search } = useSelector((state) => ({ ...state }));\r\n  const { text } = search;\r\n\r\n  const fetchProducts = (text) => {\r\n    fetchProductsByFilter(text).then((res) => setProducts(res.data));\r\n  };\r\n\r\n  const loadAllProducts = () => {\r\n    getProductsByCount(12).then((p) => {\r\n      setProducts(p.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllProducts();\r\n    getCategories().then((res) => setCategories(res.data));\r\n    getSubs().then((res) => setSubs(res.data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const delayed = setTimeout(() => {\r\n      fetchProducts({ query: text });\r\n      if(!text)\r\n      {\r\n        loadAllProducts();\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(delayed);\r\n  }, [text]);\r\n\r\n  useEffect(() => {\r\n    fetchProducts({ price });\r\n  }, [ok]);\r\n\r\n  const handleSlider = (value) => {\r\n    dispatch({\r\n      type: 'SEARCH_QUERY',\r\n      payload: { text: '' },\r\n    });\r\n    setPrice(value);\r\n    setCategoryIds([]);\r\n    setStar('');\r\n    setSub('');\r\n    setBrand('');\r\n    setColor('');\r\n    setShipping('');\r\n\r\n    setTimeout(() => {\r\n      setOk(!ok);\r\n    }, 1000);\r\n  };\r\n\r\n  //load products based on category\r\n  const showCategories = () =>\r\n    categories.map((c) => (\r\n      <div key={c._id}>\r\n        <Checkbox\r\n          className='pb-2 pl-4 pr-4'\r\n          value={c._id}\r\n          name='category'\r\n          onChange={handleCheck}\r\n          checked={categoryIds.includes(c._id)}\r\n        >\r\n          {c.name}\r\n        </Checkbox>\r\n        <br />\r\n      </div>\r\n    ));\r\n\r\n  const handleCheck = (e) => {\r\n    dispatch({\r\n      type: 'SEARCH_QUERY',\r\n      payload: { text: '' },\r\n    });\r\n    setPrice([0, 0]);\r\n    setStar('');\r\n    setSub('');\r\n    setBrand('');\r\n    setColor('');\r\n    setShipping('');\r\n    let inTheState = [...categoryIds];\r\n    let justChecked = e.target.value;\r\n    let foundInTheState = inTheState.indexOf(justChecked);\r\n\r\n    if (foundInTheState === -1) {\r\n      inTheState.push(justChecked);\r\n    } else {\r\n      inTheState.splice(foundInTheState, 1);\r\n    }\r\n\r\n    setCategoryIds(inTheState);\r\n\r\n    fetchProducts({ category: inTheState });\r\n  };\r\n\r\n  //show products of star rating\r\n  const handleStarClick = (num) => {\r\n    dispatch({\r\n      type: 'SEARCH_QUERY',\r\n      payload: { text: '' },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar(num);\r\n    setSub('');\r\n    setBrand('');\r\n    setColor('');\r\n    setShipping('');\r\n    fetchProducts({ stars: num });\r\n  };\r\n  const showStars = () => (\r\n    <div className='pr-4 pl-4 pb-2'>\r\n      <Star starClick={handleStarClick} numberOfStars={5} />\r\n      <Star starClick={handleStarClick} numberOfStars={4} />\r\n      <Star starClick={handleStarClick} numberOfStars={3} />\r\n      <Star starClick={handleStarClick} numberOfStars={2} />\r\n      <Star starClick={handleStarClick} numberOfStars={1} />\r\n    </div>\r\n  );\r\n\r\n  //show products by sub category\r\n  const showSubs = () =>\r\n    subs.map((s) => (\r\n      <div\r\n        key={s._id}\r\n        onClick={() => handleSub(s)}\r\n        className='p-1 m-1 badge badge-secondary'\r\n        style={{ cursor: 'pointer' }}\r\n      >\r\n        {s.name}\r\n      </div>\r\n    ));\r\n\r\n  const handleSub = (sub) => {\r\n    setSub(sub);\r\n    dispatch({\r\n      type: 'SEARCH_QUERY',\r\n      payload: { text: '' },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar('');\r\n    setBrand('');\r\n    setColor('');\r\n    setShipping('');\r\n    fetchProducts({ sub });\r\n  };\r\n\r\n  //brands\r\n  const showBrands = () =>\r\n    brands.map((b) => (\r\n      <Radio\r\n        key={b}\r\n        value={b}\r\n        name={b}\r\n        checked={b === brand}\r\n        onChange={handleBrand}\r\n        className='pb-1 pl-4 pr-5'\r\n      >\r\n        {b}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleBrand = (e) => {\r\n    setSub('');\r\n    dispatch({\r\n      type: 'SEARCH_QUERY',\r\n      payload: { text: '' },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar('');\r\n    setBrand(e.target.value);\r\n    setColor('');\r\n    setShipping('');\r\n    fetchProducts({ brand: e.target.value });\r\n  };\r\n\r\n  //colors\r\n  const showColors = () =>\r\n    colors.map((c) => (\r\n      <Radio\r\n        key={c}\r\n        value={c}\r\n        name={c}\r\n        checked={c === color}\r\n        onChange={handleColor}\r\n        className='pb-1 pl-4 pr-5'\r\n      >\r\n        {c}\r\n      </Radio>\r\n    ));\r\n\r\n  const handleColor = (e) => {\r\n    setSub('');\r\n    dispatch({\r\n      type: 'SEARCH_QUERY',\r\n      payload: { text: '' },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar('');\r\n    setBrand('');\r\n    setColor(e.target.value);\r\n    setShipping('');\r\n    fetchProducts({ color: e.target.value });\r\n  };\r\n\r\n  //shipping\r\n\r\n  const showShipping = () => (\r\n    <>\r\n      <Checkbox\r\n        className='pb-2 pl-4 pr-4'\r\n        onChange={handleShippingchange}\r\n        value='Yes'\r\n        checked={shipping === 'Yes'}\r\n      >\r\n        Yes\r\n      </Checkbox>\r\n      <Checkbox\r\n        className='pb-2 pl-4 pr-4'\r\n        onChange={handleShippingchange}\r\n        value='No'\r\n        checked={shipping === 'No'}\r\n      >\r\n        No\r\n      </Checkbox>\r\n    </>\r\n  );\r\n\r\n  const handleShippingchange = (e) => {\r\n    setSub('');\r\n    dispatch({\r\n      type: 'SEARCH_QUERY',\r\n      payload: { text: '' },\r\n    });\r\n    setPrice([0, 0]);\r\n    setCategoryIds([]);\r\n    setStar('');\r\n    setBrand('');\r\n    setColor('');\r\n    setShipping(e.target.value);\r\n    fetchProducts({ shipping: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-3 pt-2'>\r\n          <h4>Search/Filter</h4>\r\n          <hr />\r\n          <Menu\r\n            defaultOpenKeys={['1', '2', '3', '4', '5', '6', '7']}\r\n            mode='inline'\r\n          >\r\n            <SubMenu\r\n              key='1'\r\n              title={\r\n                <span className='h6'>\r\n                  <DollarOutlined /> Price\r\n                </span>\r\n              }\r\n            >\r\n              <div>\r\n                <Slider\r\n                  className='ml-4 mr-4'\r\n                  tipFormatter={(v) => `$${v}`}\r\n                  range\r\n                  value={price}\r\n                  onChange={handleSlider}\r\n                  max='30000'\r\n                />\r\n              </div>\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key='2'\r\n              title={\r\n                <span className='h6'>\r\n                  <DownSquareOutlined /> Categories\r\n                </span>\r\n              }\r\n            >\r\n              <div>{showCategories()}</div>\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key='3'\r\n              title={\r\n                <span className='h6'>\r\n                  <StarOutlined /> Rating\r\n                </span>\r\n              }\r\n            >\r\n              <div>{showStars()}</div>\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key='4'\r\n              title={\r\n                <span className='h6'>\r\n                  <DownSquareOutlined /> Sub Categories\r\n                </span>\r\n              }\r\n            >\r\n              <div className='pl-4 pr-4'>{showSubs()}</div>\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key='5'\r\n              title={\r\n                <span className='h6'>\r\n                  <DownSquareOutlined /> Brands\r\n                </span>\r\n              }\r\n            >\r\n              <div className='pr-5'>{showBrands()}</div>\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key='6'\r\n              title={\r\n                <span className='h6'>\r\n                  <DownSquareOutlined /> Colors\r\n                </span>\r\n              }\r\n            >\r\n              <div className='pr-5'>{showColors()}</div>\r\n            </SubMenu>\r\n\r\n            <SubMenu\r\n              key='7'\r\n              title={\r\n                <span className='h6'>\r\n                  <DownSquareOutlined /> Shipping\r\n                </span>\r\n              }\r\n            >\r\n              <div className='pr-5'>{showShipping()}</div>\r\n            </SubMenu>\r\n          </Menu>\r\n        </div>\r\n        <div className='col-md-9 pt-2'>\r\n          {loading ? (\r\n            <h4 className='text-danger'>Loading...</h4>\r\n          ) : (\r\n            <h4 className='text-danger'>Products</h4>\r\n          )}\r\n          {products.length < 1 && <p>No products found</p>}\r\n\r\n          <div className='row pb-5'>\r\n            {products.map((p) => (\r\n              <div key={p._id} className='col-md-4 mt-3'>\r\n                <ProductCard product={p} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\forms\\Star.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\cartReducer.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Cart.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\ProductCardInCheckout.js",["377","378","379"],"import React from 'react';\r\nimport ModalImage from 'react-modal-image';\r\nimport laptop from '../../images/laptop.jpg';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { CheckCircleOutlined, CloseCircleOutlined, CloseOutlined } from '@ant-design/icons';\r\nconst ProductCardInCheckout = ({ p }) => {\r\n  const colors = ['Black', 'Brown', 'Silver', 'White', 'Blue'];\r\n  const dispatch = useDispatch();\r\n  const handleColorChange = (e) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'));\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === p._id) cart[i].color = e.target.value;\r\n      });\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n\r\n      dispatch({\r\n        type: 'ADD_TO_CART',\r\n        payload: cart,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleQuantityChange =(e)=>{\r\n      let count = e.target.value<1?1:e.target.value;\r\n\r\n      if(count>p.quantity)\r\n      {\r\n          toast.error(`Max available quantity: ${p.quantity}`);\r\n          return;\r\n      }\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'));\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === p._id) cart[i].count = count;\r\n      });\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n\r\n      dispatch({\r\n        type: 'ADD_TO_CART',\r\n        payload: cart,\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleRemove =() =>{\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n      if (localStorage.getItem('cart')) {\r\n        cart = JSON.parse(localStorage.getItem('cart'));\r\n      }\r\n\r\n      cart.map((product, i) => {\r\n        if (product._id === p._id) \r\n            cart.splice(i,1);\r\n      });\r\n\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n\r\n      dispatch({\r\n        type: 'ADD_TO_CART',\r\n        payload: cart,\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          <div style={{ width: '100px', height: 'auto' }}>\r\n            {p.images.length ? (\r\n              <ModalImage small={p.images[0].url} large={p.images[0].url} />\r\n            ) : (\r\n              <ModalImage small={laptop} large={laptop} />\r\n            )}\r\n          </div>\r\n        </td>\r\n        <td>{p.title}</td>\r\n        <td>${p.price}</td>\r\n        <td>{p.brand}</td>\r\n        <td>\r\n          <select\r\n            name='color'\r\n            onChange={handleColorChange}\r\n            className='form-control'\r\n          >\r\n            {p.color ? <option>{p.color}</option> : <option>Select</option>}\r\n            {colors\r\n              .filter((c) => c !== p.color)\r\n              .map((c) => (\r\n                <option value={c} key={c}>\r\n                  {c}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </td>\r\n        <td className=\"text-center\">\r\n            <input type=\"number\" className=\"form-control\" value={p.count} onChange={handleQuantityChange}/>\r\n        </td>\r\n        <td className=\"text-center\">{p.shipping ==='Yes'?(<CheckCircleOutlined className='text-success'/>):(<CloseCircleOutlined className='text-danger'/>)}</td>\r\n        <td className=\"text-center\">\r\n            <CloseOutlined onClick={handleRemove} className='text-danger pointer'/>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default ProductCardInCheckout;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\drawerReducer.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\drawer\\SideDrawer.js",["380","381","382"],"import React from 'react';\r\nimport { Drawer, Button } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport laptop from '../../images/laptop.jpg';\r\nconst SideDrawer = () => {\r\n  const dispatch = useDispatch();\r\n  const { drawer, cart } = useSelector((state) => ({ ...state }));\r\n  const imageStyle = {\r\n    width: '100%',\r\n    height: '50px',\r\n    objectFit: 'cover',\r\n  };\r\n  return (\r\n    <Drawer\r\n      className='text-center'\r\n      title={`Cart /${cart.length} Product`}\r\n      visible={drawer}\r\n      onClose={() => {\r\n        dispatch({\r\n          type: 'SET_VISIBLE',\r\n          payload: false,\r\n        });\r\n      }}\r\n    >\r\n      {cart.map((p) => (\r\n        <div className='row' key={p._id}>\r\n          <div className='col'>\r\n            {p.images[0] ? (\r\n              <>\r\n                <img src={p.images[0].url} style={imageStyle} />\r\n                <p className='text-center bg-secondary text-light'>\r\n                  {p.title} x {p.count}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <img src={laptop} />\r\n                <p className='text-center bg-secondary text-light'>\r\n                  {p.title} x {p.count}\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <Link to='/cart'>\r\n        <button\r\n          className='text-center btn btn-primary btn-raised btn-block'\r\n          onClick={() =>\r\n            dispatch({\r\n              type: 'SET_VISIBLE',\r\n              payload: false,\r\n            })\r\n          }\r\n        >\r\n            GO TO CART\r\n        </button>\r\n      </Link>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Checkout.js",["383"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  emptyUserCart,\r\n  getUserCart,\r\n  saveUserAddress,\r\n  applyCoupon,\r\n  createCashOrderForUser\r\n} from '../functions/user';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nconst Checkout = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const [products, setProducts] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [address, setAddress] = useState('');\r\n  const [addressSaved, setAddressSaved] = useState(false);\r\n  const [coupon, setCoupon] = useState('');\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n  const [discountError, setDiscountError] = useState('');\r\n\r\n  const { user, COD } = useSelector((state) => ({ ...state }));\r\n  const couponTrueOrFalse = useSelector((state) => state.coupon );\r\n\r\n  useEffect(() => {\r\n    getUserCart(user.token).then((res) => {\r\n      setProducts(res.data.products);\r\n      setTotal(res.data.cartTotal);\r\n    });\r\n  }, []);\r\n\r\n  const emptyCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n      localStorage.removeItem('cart');\r\n    }\r\n    dispatch({\r\n      type: 'ADD_TO_CART',\r\n      payload: [],\r\n    });\r\n\r\n    emptyUserCart(user.token).then((res) => {\r\n      setProducts([]);\r\n      setTotal(0);\r\n      setTotalAfterDiscount(0);\r\n      toast.success('Cart is empty! Continue Shopping');\r\n    });\r\n  };\r\n\r\n  const saveAddressToDb = () => {\r\n    saveUserAddress(user.token, address).then((res) => {\r\n      if (res.data.ok) {\r\n        setAddressSaved(true);\r\n        toast.success('Address saved');\r\n      }\r\n    });\r\n  };\r\n\r\n  const showAddress = () => (\r\n    <>\r\n      <ReactQuill theme='snow' value={address} onChange={setAddress} />\r\n      <button className='btn btn-primary mt-2' onClick={saveAddressToDb}>\r\n        Save\r\n      </button>\r\n    </>\r\n  );\r\n\r\n  const showProductSummary = () =>\r\n    products.map((p, i) => (\r\n      <div key={i}>\r\n        <p>\r\n          {p.product.title} ({p.color}) x {p.count} ={' '}\r\n          {p.product.price * p.count}\r\n        </p>\r\n      </div>\r\n    ));\r\n\r\n  const showApplyCoupon = () => (\r\n    <>\r\n      <input\r\n        type='text'\r\n        className='form-control'\r\n        onChange={(e) => {\r\n          setCoupon(e.target.value);\r\n          setDiscountError('');\r\n        }}\r\n        value={coupon}\r\n      />\r\n      <button className='btn btn-primary mt-2' onClick={applyDiscountCoupon}>\r\n        Apply\r\n      </button>\r\n    </>\r\n  );\r\n\r\n  const applyDiscountCoupon = () => {\r\n    applyCoupon(user.token, coupon).then((res) => {\r\n      if (res.data) {\r\n        setTotalAfterDiscount(res.data);\r\n\r\n        dispatch({\r\n          type: 'COUPON_APPLIED',\r\n          payload: true,\r\n        });\r\n      }\r\n\r\n      if (res.data.err) {\r\n        setDiscountError(res.data.err);\r\n\r\n        dispatch({\r\n          type: 'COUPON_APPLIED',\r\n          payload: false,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const createCashOrder=()=>{\r\n    createCashOrderForUser(user.token,COD,couponTrueOrFalse).then(res=>{\r\n        if(res.data.ok){\r\n          if (typeof window !== 'undefined') {\r\n            localStorage.removeItem('cart');\r\n          }\r\n\r\n          dispatch({\r\n            type: 'ADD_TO_CART',\r\n            payload: [],\r\n          });\r\n\r\n          dispatch({\r\n            type: 'COUPON_APPLIED',\r\n            payload: false,\r\n          });\r\n\r\n          dispatch({\r\n            type: 'COD',\r\n            payload: false,\r\n          });\r\n\r\n          emptyUserCart(user.token);\r\n\r\n          setTimeout(()=>{\r\n            history.push('/user/history');\r\n          },1000)\r\n        }\r\n    })\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-6'>\r\n        <h4>Delivery Address</h4>\r\n        <br />\r\n        <br />\r\n        {showAddress()}\r\n        <hr />\r\n        <h4>Got Coupon?</h4>\r\n        <br />\r\n        {showApplyCoupon()}\r\n        <br />\r\n        {discountError && <p className='bg-danger p-2'>{discountError}</p>}\r\n      </div>\r\n      <div className='col-md-6'>\r\n        <h4>Order Summary</h4>\r\n        <hr />\r\n        <p>Products {products.length}</p>\r\n        <hr />\r\n        {showProductSummary()}\r\n        <hr />\r\n        <p>Cart Total : ${total}</p>\r\n\r\n        {totalAfterDiscount > 0 && (\r\n          <p className='bg-success p-2'>\r\n            Discount Applied ! Total Payable :${totalAfterDiscount}\r\n          </p>\r\n        )}\r\n\r\n        <div className='row'>\r\n          <div className='col-md-6'>\r\n            {COD ? (\r\n              <button\r\n                className='btn btn-primary'\r\n                disabled={!addressSaved || !products.length}\r\n                onClick={createCashOrder}\r\n              >\r\n                Place Order\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className='btn btn-primary'\r\n                disabled={!addressSaved || !products.length}\r\n                onClick={() => history.push('/payment')}\r\n              >\r\n                Place Order\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div className='col-md-6'>\r\n            <button\r\n              className='btn btn-primary'\r\n              onClick={emptyCart}\r\n              disabled={!products.length}\r\n            >\r\n              Empty Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\user.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\coupon\\CreateCouponPage.js",["384"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport DatePicker from 'react-datepicker';\r\nimport { getCoupons, removeCoupon, createCoupon } from '../../functions/coupon';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\nimport AdminNav from '../../components/nav/AdminNav';\r\n\r\nconst CreateCouponPage = () => {\r\n  const [name, setName] = useState('');\r\n  const [expiry, setExpiry] = useState('');\r\n  const [discount, setDiscount] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [coupons, setCoupons] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    loadAllCoupons();\r\n  }, []);\r\n\r\n  const loadAllCoupons = () => getCoupons().then((res) => setCoupons(res.data));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    createCoupon({ name, expiry, discount }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        loadAllCoupons();\r\n        setName('');\r\n        setDiscount('');\r\n        setExpiry('');\r\n        toast.success(`${res.data.name} is created`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleRemove = (couponId) => {\r\n    if (window.confirm('Delete?')) {\r\n      setLoading(true);\r\n      removeCoupon(couponId, user.token)\r\n        .then((res) => {\r\n            loadAllCoupons();\r\n          setLoading(false);\r\n          toast.error(`Coupon ${res.data.name} deleted`);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row'>\r\n        <div className='col-md-2'>\r\n          <AdminNav />\r\n        </div>\r\n        <div className='col-md-10'>\r\n          {loading ? <h4 className='text-danger'>Loading</h4> : <h4>Coupon</h4>}\r\n          <form onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <label className='text-muted'>Name</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n                autoFocus\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label className='text-muted'>Discount %</label>\r\n              <input\r\n                type='text'\r\n                className='form-control'\r\n                onChange={(e) => setDiscount(e.target.value)}\r\n                value={discount}\r\n                autoFocus\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group'>\r\n              <label className='text-muted'>Expiry</label>\r\n              <br />\r\n              <DatePicker\r\n                className='form-control'\r\n                selected={new Date()}\r\n                value={expiry}\r\n                onChange={(date) => setExpiry(date)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button className='btn btn-outline-primary'>Save</button>\r\n          </form>\r\n\r\n          <br />\r\n\r\n          <h4>{coupons.length} Coupons</h4>\r\n\r\n          <table className='table table-bordered'>\r\n            <thead className='thead-light'>\r\n              <tr>\r\n                <th scope='col'>Name</th>\r\n                <th scope='col'>Expiry</th>\r\n                <th scope='col'>Discount</th>\r\n                <th scope='col'>Action</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {coupons.map((c) => (\r\n                <tr key={c._id}>\r\n                  <td>{c.name}</td>\r\n                  <td>{new Date(c.expiry).toLocaleDateString()}</td>\r\n                  <td>{c.discount}</td>\r\n                  <td>\r\n                    <DeleteOutlined\r\n                      className='text-danger pointer'\r\n                      onClick={()=>handleRemove(c._id)}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCouponPage;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\coupon.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\couponReducer.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\pages\\Payment.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\StripeCheckout.js",["385","386"],"import React, { useState, useEffect } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createPaymentIntent } from '../functions/stripe';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'antd';\r\nimport { DollarOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport Laptop from '../images/laptop.jpg';\r\nimport { createOrder,emptyUserCart } from '../functions/user';\r\nconst StripeCheckout = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { user, coupon } = useSelector((state) => ({ ...state }));\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState('');\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState('');\r\n\r\n  const [cartTotal, setCartTotal] = useState(0);\r\n  const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\r\n  const [payable, setPayable] = useState(0);\r\n\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  useEffect(() => {\r\n    createPaymentIntent(user.token, coupon).then((res) => {\r\n      setClientSecret(res.data.clientSecret);\r\n      //additional res\r\n      setCartTotal(res.data.cartTotal);\r\n      setTotalAfterDiscount(res.data.totalAfterDiscount);\r\n      setPayable(res.data.payable);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: e.target.name.value,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } else {\r\n      createOrder(payload, user.token).then((res) => {\r\n        if (res.data.ok) {\r\n          if (typeof window !== 'undefined') {\r\n            localStorage.removeItem('cart');\r\n          }\r\n\r\n          dispatch({\r\n            type: 'ADD_TO_CART',\r\n            payload: [],\r\n          });\r\n\r\n          dispatch({\r\n            type: 'COUPON_APPLIED',\r\n            payload: false,\r\n          });\r\n\r\n          emptyUserCart(user.token);\r\n        }\r\n      });\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n    }\r\n  };\r\n\r\n  const handleChange = async (e) => {\r\n    setDisabled(e.empty);\r\n    setError(e.error ? e.error.message : '');\r\n  };\r\n\r\n  const cartStyle = {\r\n    style: {\r\n      base: {\r\n        color: '#32325d',\r\n        fontFamily: 'Arial, sans-serif',\r\n        fontSmoothing: 'antialiased',\r\n        fontSize: '16px',\r\n        '::placeholder': {\r\n          color: '#32325d',\r\n        },\r\n      },\r\n      invalid: {\r\n        color: '#fa755a',\r\n        iconColor: '#fa755a',\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!succeeded && (\r\n        <div>\r\n          {coupon && totalAfterDiscount !== undefined ? (\r\n            <p className='alert alert-success'>{`Total after discount : $${totalAfterDiscount}`}</p>\r\n          ) : (\r\n            <p className='alert alert-danger'>No coupon applied</p>\r\n          )}\r\n        </div>\r\n      )}\r\n      <div className='text-center pb-5'>\r\n        <Card\r\n          cover={\r\n            <img\r\n              src={Laptop}\r\n              style={{\r\n                height: '200px',\r\n                objectFit: 'cover',\r\n                marginBottom: '-50px',\r\n              }}\r\n            />\r\n          }\r\n          actions={[\r\n            <>\r\n              <DollarOutlined className='text-info' />\r\n              <br />\r\n              Total: ${cartTotal}\r\n            </>,\r\n            <>\r\n              <CheckOutlined className='text-info' />\r\n              <br />\r\n              Total Payable: ${(payable / 100).toFixed(2)}\r\n            </>,\r\n          ]}\r\n        />\r\n      </div>\r\n\r\n      <form id='payment-form' className='stripe-form' onSubmit={handleSubmit}>\r\n        <CardElement\r\n          id='card-element'\r\n          options={cartStyle}\r\n          onChange={handleChange}\r\n        />\r\n        <button\r\n          className='stripe-button'\r\n          disabled={processing || disabled || succeeded}\r\n        >\r\n          {' '}\r\n          <span id='button-text'>\r\n            {processing ? <div className='spinner' id='spinner'></div> : 'Pay'}\r\n          </span>\r\n        </button>\r\n        <br />\r\n        {error && (\r\n          <div className='card-error' role='alert'>\r\n            {error}\r\n          </div>\r\n        )}\r\n        <br />\r\n        <p className={succeeded ? 'result-message' : 'result-message hidden'}>\r\n          Payment Successful.\r\n          <Link to='/user/history'>See it in your purchase history</Link>\r\n        </p>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;\r\n","D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\stripe.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\cards\\ShowPaymentInfo.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\order\\Invoice.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\functions\\admin.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\components\\order\\Orders.js",[],"D:\\Project\\REACT\\ECOMMERCE\\client\\src\\reducers\\CODReducer.js",[],{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":8,"column":8,"nodeType":"393","messageId":"394","endLine":8,"endColumn":13},{"ruleId":"395","severity":1,"message":"396","line":26,"column":6,"nodeType":"397","endLine":26,"endColumn":21,"suggestions":"398"},{"ruleId":"391","severity":1,"message":"399","line":11,"column":11,"nodeType":"393","messageId":"394","endLine":11,"endColumn":15},{"ruleId":"391","severity":1,"message":"400","line":4,"column":23,"nodeType":"393","messageId":"394","endLine":4,"endColumn":34},{"ruleId":"391","severity":1,"message":"401","line":6,"column":10,"nodeType":"393","messageId":"394","endLine":6,"endColumn":15},{"ruleId":"395","severity":1,"message":"402","line":16,"column":6,"nodeType":"397","endLine":16,"endColumn":8,"suggestions":"403"},{"ruleId":"391","severity":1,"message":"400","line":4,"column":23,"nodeType":"393","messageId":"394","endLine":4,"endColumn":34},{"ruleId":"395","severity":1,"message":"404","line":13,"column":6,"nodeType":"397","endLine":13,"endColumn":8,"suggestions":"405"},{"ruleId":"391","severity":1,"message":"400","line":4,"column":23,"nodeType":"393","messageId":"394","endLine":4,"endColumn":34},{"ruleId":"395","severity":1,"message":"406","line":13,"column":6,"nodeType":"397","endLine":13,"endColumn":8,"suggestions":"407"},{"ruleId":"395","severity":1,"message":"408","line":19,"column":6,"nodeType":"397","endLine":19,"endColumn":8,"suggestions":"409"},{"ruleId":"391","severity":1,"message":"410","line":7,"column":21,"nodeType":"393","messageId":"394","endLine":7,"endColumn":27},{"ruleId":"391","severity":1,"message":"411","line":5,"column":10,"nodeType":"393","messageId":"394","endLine":5,"endColumn":19},{"ruleId":"391","severity":1,"message":"412","line":5,"column":29,"nodeType":"393","messageId":"394","endLine":5,"endColumn":38},{"ruleId":"395","severity":1,"message":"413","line":19,"column":6,"nodeType":"397","endLine":19,"endColumn":8,"suggestions":"414"},{"ruleId":"395","severity":1,"message":"415","line":62,"column":6,"nodeType":"397","endLine":62,"endColumn":8,"suggestions":"416"},{"ruleId":"391","severity":1,"message":"417","line":20,"column":5,"nodeType":"393","messageId":"394","endLine":20,"endColumn":13},{"ruleId":"391","severity":1,"message":"418","line":22,"column":5,"nodeType":"393","messageId":"394","endLine":22,"endColumn":13},{"ruleId":"391","severity":1,"message":"419","line":24,"column":5,"nodeType":"393","messageId":"394","endLine":24,"endColumn":11},{"ruleId":"391","severity":1,"message":"420","line":27,"column":5,"nodeType":"393","messageId":"394","endLine":27,"endColumn":10},{"ruleId":"391","severity":1,"message":"421","line":28,"column":5,"nodeType":"393","messageId":"394","endLine":28,"endColumn":10},{"ruleId":"422","severity":1,"message":"423","line":13,"column":9,"nodeType":"424","endLine":17,"endColumn":11},{"ruleId":"395","severity":1,"message":"425","line":42,"column":6,"nodeType":"397","endLine":42,"endColumn":8,"suggestions":"426"},{"ruleId":"427","severity":1,"message":"428","line":52,"column":27,"nodeType":"429","messageId":"430","endLine":52,"endColumn":29},{"ruleId":"391","severity":1,"message":"431","line":23,"column":5,"nodeType":"393","messageId":"394","endLine":23,"endColumn":9},{"ruleId":"391","severity":1,"message":"419","line":26,"column":5,"nodeType":"393","messageId":"394","endLine":26,"endColumn":11},{"ruleId":"391","severity":1,"message":"399","line":11,"column":11,"nodeType":"393","messageId":"394","endLine":11,"endColumn":15},{"ruleId":"391","severity":1,"message":"432","line":11,"column":17,"nodeType":"393","messageId":"394","endLine":11,"endColumn":21},{"ruleId":"422","severity":1,"message":"423","line":52,"column":11,"nodeType":"424","endLine":56,"endColumn":13},{"ruleId":"433","severity":1,"message":"434","line":65,"column":13,"nodeType":"424","endLine":65,"endColumn":74},{"ruleId":"395","severity":1,"message":"435","line":14,"column":6,"nodeType":"397","endLine":14,"endColumn":12,"suggestions":"436"},{"ruleId":"395","severity":1,"message":"435","line":14,"column":6,"nodeType":"397","endLine":14,"endColumn":12,"suggestions":"437"},{"ruleId":"395","severity":1,"message":"438","line":16,"column":6,"nodeType":"397","endLine":16,"endColumn":12,"suggestions":"439"},{"ruleId":"395","severity":1,"message":"440","line":18,"column":3,"nodeType":"393","endLine":18,"endColumn":12,"suggestions":"441"},{"ruleId":"391","severity":1,"message":"432","line":19,"column":17,"nodeType":"393","messageId":"394","endLine":19,"endColumn":21},{"ruleId":"422","severity":1,"message":"423","line":62,"column":42,"nodeType":"424","endLine":62,"endColumn":79},{"ruleId":"422","severity":1,"message":"423","line":65,"column":24,"nodeType":"424","endLine":65,"endColumn":72},{"ruleId":"433","severity":1,"message":"434","line":86,"column":13,"nodeType":"424","endLine":86,"endColumn":42},{"ruleId":"433","severity":1,"message":"434","line":92,"column":13,"nodeType":"424","endLine":92,"endColumn":46},{"ruleId":"391","severity":1,"message":"442","line":2,"column":17,"nodeType":"393","messageId":"394","endLine":2,"endColumn":23},{"ruleId":"391","severity":1,"message":"443","line":2,"column":10,"nodeType":"393","messageId":"394","endLine":2,"endColumn":14},{"ruleId":"395","severity":1,"message":"444","line":19,"column":6,"nodeType":"397","endLine":19,"endColumn":8,"suggestions":"445"},{"ruleId":"395","severity":1,"message":"444","line":18,"column":6,"nodeType":"397","endLine":18,"endColumn":8,"suggestions":"446"},{"ruleId":"391","severity":1,"message":"447","line":18,"column":18,"nodeType":"393","messageId":"394","endLine":18,"endColumn":27},{"ruleId":"391","severity":1,"message":"448","line":26,"column":10,"nodeType":"393","messageId":"394","endLine":26,"endColumn":14},{"ruleId":"391","severity":1,"message":"449","line":28,"column":10,"nodeType":"393","messageId":"394","endLine":28,"endColumn":13},{"ruleId":"391","severity":1,"message":"450","line":29,"column":18,"nodeType":"393","messageId":"394","endLine":29,"endColumn":27},{"ruleId":"391","severity":1,"message":"451","line":37,"column":18,"nodeType":"393","messageId":"394","endLine":37,"endColumn":27},{"ruleId":"395","severity":1,"message":"452","line":81,"column":6,"nodeType":"397","endLine":81,"endColumn":10,"suggestions":"453"},{"ruleId":"427","severity":1,"message":"428","line":17,"column":29,"nodeType":"429","messageId":"430","endLine":17,"endColumn":31},{"ruleId":"427","severity":1,"message":"428","line":44,"column":29,"nodeType":"429","messageId":"430","endLine":44,"endColumn":31},{"ruleId":"427","severity":1,"message":"428","line":64,"column":29,"nodeType":"429","messageId":"430","endLine":64,"endColumn":31},{"ruleId":"391","severity":1,"message":"442","line":2,"column":18,"nodeType":"393","messageId":"394","endLine":2,"endColumn":24},{"ruleId":"422","severity":1,"message":"423","line":31,"column":17,"nodeType":"424","endLine":31,"endColumn":65},{"ruleId":"422","severity":1,"message":"423","line":38,"column":17,"nodeType":"424","endLine":38,"endColumn":37},{"ruleId":"395","severity":1,"message":"454","line":31,"column":6,"nodeType":"397","endLine":31,"endColumn":8,"suggestions":"455"},{"ruleId":"391","severity":1,"message":"400","line":2,"column":23,"nodeType":"393","messageId":"394","endLine":2,"endColumn":34},{"ruleId":"395","severity":1,"message":"456","line":35,"column":6,"nodeType":"397","endLine":35,"endColumn":8,"suggestions":"457"},{"ruleId":"422","severity":1,"message":"423","line":116,"column":13,"nodeType":"424","endLine":123,"endColumn":15},"no-native-reassign",["458"],"no-negated-in-lhs",["459"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.","ArrayExpression",["460"],"'user' is assigned a value but never used.","'useDispatch' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.",["461"],"React Hook useEffect has a missing dependency: 'loadWishlist'. Either include it or remove the dependency array.",["462"],"React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["463"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["464"],"'getSub' is defined but never used.","'createSub' is defined but never used.","'removeSub' is defined but never used.","React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["465"],"React Hook useEffect has a missing dependency: 'loadCategories'. Either include it or remove the dependency array.",["466"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["467"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'subs' is assigned a value but never used.","'cart' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["468"],["469"],"React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["470"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [product.ratings, user] as a second argument to the useEffect Hook.",["471"],"'Button' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["472"],["473"],"'ItemGroup' is assigned a value but never used.","'star' is assigned a value but never used.","'sub' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["474"],"React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["475"],"React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["476"],"no-global-assign","no-unsafe-negation",{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"485","fix":"486"},{"desc":"487","fix":"488"},{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"493","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"500","fix":"502"},{"desc":"503","fix":"504"},{"desc":"505","fix":"506"},{"desc":"507","fix":"508"},"Update the dependencies array to be: [user, history, location.state]",{"range":"509","text":"510"},"Update the dependencies array to be: [loadUserOrders]",{"range":"511","text":"512"},"Update the dependencies array to be: [loadWishlist]",{"range":"513","text":"514"},"Update the dependencies array to be: [loadOrders]",{"range":"515","text":"516"},"Update the dependencies array to be: [loadCategory]",{"range":"517","text":"518"},"Update the dependencies array to be: [loadSub]",{"range":"519","text":"520"},"Update the dependencies array to be: [loadCategories]",{"range":"521","text":"522"},"Update the dependencies array to be: [loadProduct]",{"range":"523","text":"524"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"525","text":"526"},{"range":"527","text":"526"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"528","text":"529"},"Add dependencies array: [product.ratings, user]",{"range":"530","text":"531"},"Update the dependencies array to be: [slug]",{"range":"532","text":"533"},{"range":"534","text":"533"},"Update the dependencies array to be: [ok, price]",{"range":"535","text":"536"},"Update the dependencies array to be: [user.token]",{"range":"537","text":"538"},"Update the dependencies array to be: [coupon, user.token]",{"range":"539","text":"540"},[894,909],"[user, history, location.state]",[701,703],"[loadUserOrders]",[511,513],"[loadWishlist]",[508,510],"[loadOrders]",[679,681],"[loadCategory]",[769,771],"[loadSub]",[2003,2005],"[loadCategories]",[1455,1457],"[loadProduct]",[539,545],"[loadAllProducts, page]",[539,545],[616,622],"[loadSingleProduct, slug]",[896,896],", [product.ratings, user]",[641,643],"[slug]",[559,561],[2261,2265],"[ok, price]",[1103,1105],"[user.token]",[1446,1448],"[coupon, user.token]"]